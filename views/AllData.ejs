<%- include('header.ejs'); %>

<% if(accessToken) { %>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <!-- Menu Items -->
    <ul class="navbar-nav mr-auto">
      <li class="nav-item">
        <a class="nav-link" href="/dashboard">Dashboard</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">All Posts</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Users</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">New Entry</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">All Entries</a>
      </li>
    </ul>

    <!-- Welcome User Dropdown -->
    <ul class="navbar-nav" style="margin-right: 20px;"> 
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Welcome <%= user.fullname %>
          <img src="<%= user.userphoto %>" alt="Avatar" width="30" height="30" class="rounded-circle">
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="/user-profile">My Account</a>
          <a class="dropdown-item" href="/change-password">Change Password</a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="#" id="logout">Logout</a>
        </div>
      </li>
    </ul>
  </nav>
<div class="container">
    <div class="card card-container" style="max-width: 1440px;">
      <div class="container">
        <form class="d-flex" style="margin-bottom: 30px; max-width: 50%; float: right !important;">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">&nbsp&nbsp
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
        <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#exampleModal" style="float: left; margin-bottom: 20px;">Add New Entry</button>

        <table class="table mt-2 table-striped table-bordered table-hover table-md">
          <thead class="thead-dark">
            <tr>
              <th><strong>Customer ID</strong></th>
              <th><strong>Business Name</strong></th>
              <th><strong>Owner's Name</strong></th>
              <th><strong>Phone Number</strong></th>
              <th><strong>Suburb</strong></th>
              <th><strong>Status</strong></th>
              <th><strong>Actions</strong></th>

            </tr>
          </thead>
          <tbody id="CustomerDataTableBody">           
            
          </tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
          <ul class="pagination">
              <% for (let page = 1; page <= pagination.totalPages; page++) { %>
                  <li class="page-item <%= pagination.currentPage === page ? 'active' : '' %>">
                      <a class="page-link" href="/all-data?page=<%= page %>"><%= page %></a>
                  </li>
              <% } %>
          </ul>
        </nav>

        <div class="dropdown">
          <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton2" data-bs-toggle="dropdown" aria-expanded="false">
           Sort Data
          </button>
          <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton2">
            <li><a class="dropdown-item" href="#">30</a></li>
            <li><a class="dropdown-item" href="#">50</a></li>
            <li><a class="dropdown-item" href="#">80</a></li>
            <li><a class="dropdown-item" href="#">All</a></li>

          </ul>
        </div>
      
      </div>
    </div><!-- /card-container -->
</div><!-- /container -->

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">X</button>
      </div>
      <div class="modal-body">

        <div id="alertMessage" class="alert" role="alert" style="display: none !important">
          <strong></strong>
          <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
      </div>

        <form id="addCustomer" enctype="multipart/form-data">

          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Registration Date</label>
            <input type="date" class="form-control" name="registration_date">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Business Name</label>
            <input type="text" class="form-control" name="business_name" id="exampleFormControlInput1" placeholder="ABC Pty Ltd">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Customer Name</label>
            <input type="text" class="form-control" name="customer_name" id="exampleFormControlInput1" placeholder="John Doe">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Email</label>
            <input type="email" class="form-control" name="email" id="exampleFormControlInput1" placeholder="name@example.com">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Phone Number</label>
            <input type="number" class="form-control" name="phone" id="exampleFormControlInput1" placeholder="0412 699 885">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Street Address</label>
            <input type="text" class="form-control" name="street_address" id="exampleFormControlInput1" placeholder="123 King St">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Suburb</label>
            <input type="text" class="form-control" name="suburb" id="exampleFormControlInput1" placeholder="Boston">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">State</label>
            <input type="text" class="form-control" name="state" id="exampleFormControlInput1" placeholder="Sydney">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Country</label>
            <input type="text" class="form-control" name="country" id="exampleFormControlInput1" placeholder="USA">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Pincode</label>
            <input type="number" class="form-control" name="pincode" id="exampleFormControlInput1" placeholder="2544">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Business Logo</label>
            <input type="file" class="form-control" name="business_logo" id="business_logo">
          </div>
          <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Status</label>
            <select class="form-control" aria-label="Default select example" name="status">
              <option selected>--Select Status--</option>
              <option value="Active">Active</option>
              <option value="Not Active">Not Active</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="exampleFormControlTextarea1" class="form-label">Extra Information</label>
            <textarea id="editorContent" name="extra_info" style="display: none;"></textarea>
            <div id="editor"></div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="saveChangesButton">Save changes</button>
        </div>

    </form>
    </div>
  </div>
</div>

<% } %>

<script>

tinymce.init({
        selector: '#editor', // Use the ID of the container element
        height: 300, // Set the height of the editor
        plugins: 'link image code', // Include desired plugins
        toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code', // Customize the toolbar
        menubar: false, 
        setup: function (editor) {
            editor.on('change', function () {
                const content = editor.getContent();
                document.getElementById('editorContent').value = content;
            });
        }
    });


  // Function to handle form submission
  async function submitForm() {
    const form = document.getElementById('addCustomer');

    // Check if form exists and is accessible
    if (!form) {
      console.error("Form not found or inaccessible.");
      return;
    }

    // Create a JSON object from form data
    const formData = {};
    const elements = form.elements;
    for (let i = 0; i < elements.length; i++) {
      const element = elements[i];
      if (element.name && element.value) {
        formData[element.name] = element.value;
      }
    }

    // Convert the file to Base64
    const businessLogoInput = document.getElementById('business_logo');
    const file = businessLogoInput.files[0];

    if (file) {
      formData.business_logo = await convertFileToBase64(file);
    }

    // Send JSON data to the API endpoint
    fetch(`/api/v1/AddNewCustomer/<%= user.userID%>`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData),
    })
      .then(response => response.json())
      .then(data => {
        console.log(data.success_message);

        let message = '';
        let alertClass = '';

          if (data.success_message) {
            alertClass = "alert-success";
            message = data.success_message;

              } else {
                alertClass = "alert-danger";
                message = data.error_msg;
              }

              showAlert(message, alertClass);
      })
      .catch(error => {
        console.error("Error sending form data:", error);
      });
  }

  // Attach click event to the Save Changes button
  document.getElementById('saveChangesButton').addEventListener('click', function () {
    submitForm();
  });

  // Function to convert file to Base64
  function convertFileToBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);

      reader.onload = function () {
        resolve(reader.result.split(',')[1]);
      };

      reader.onerror = function (error) {
        reject(error);
      };
    });
  }

  function showAlert(message, alertClass) {
      const alertElement = document.getElementById("alertMessage");
      alertElement.className = `alert ${alertClass}`;
      alertElement.textContent = message;
      alertElement.style.display = "block";
    }

    // fetch json data from backend api //
    async function getCustomerData() {
      try {
        const urlParams = new URLSearchParams(window.location.search);
        const page = urlParams.get('page') || 1;

        const api = await fetch (`/api/v1/GetAllCustomers/<%= user.userID %>?page=${page}`);
        const data = await api.json();
        console.log(data.data.results);

        // Show data into table //
        if (data.data && data.data.results) {
        const tableBody = document.getElementById('CustomerDataTableBody');
        tableBody.innerHTML = ''; // Clear any existing rows

        data.data.results.forEach((customer) => {
          const newRow = document.createElement('tr');
          newRow.innerHTML = `
            <td>${customer.customer_id}</td>
            <td>${customer.business_name}</td>
            <td>${customer.customer_name}</td>
            <td>${customer.phone}</td>
            <td>${customer.suburb}</td>
            <td><a href="#" class="badge badge-${customer.status === 'Active' ? 'success' : 'danger'}">${customer.status}</a></td>
            <td>
              <div class="btn-group">
                <button type="button" class="btn btn-warning dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                  Action
                </button>
                <ul class="dropdown-menu">
                  <li><a class="dropdown-item" href=/customer?adminID=${customer.adminID}&customer_id=${customer.customer_id}>View User</a></li>
                  <li><a class="dropdown-item" href="#">Edit</a></li>
                  <li><a class="dropdown-item" href="#">Delete</a></li>
                </ul>
              </div>
            </td>
          `;

          tableBody.appendChild(newRow);
        });
      }
        
      } catch (error) {
        console.log(error)
        
      }
    }

    window.addEventListener('load', getCustomerData);

</script>





